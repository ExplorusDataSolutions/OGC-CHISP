<div id="map" style="margin-top:2px"></div>
<div id="list-container">
	<table id="list" class="hide table table-striped table-bordered table-hover table-condensed">
		<thead></thead>
		<tbody></tbody>
	</table>
</div>
<script>
	jQuery('#map').parent().css('padding', '0px');

	jQuery(function($) {
		var appView = Backbone.View.extend({
			el : $("body"),
			events : {
				"click #list" : "tableClickDelegate",
			},
			tableClickDelegate : function(e) {
				if (e.target.tagName == 'TD') {
					this.showMarkerPopup(e.target);
				}
				if ($(e.target).hasClass('btn-danger')) {
					this.cancelSubscribe(e.target);
				}
				if ($(e.target).hasClass('btn-success')) {
					this.doSubscribe(e.target);
				}
			},
			showMarkerPopup : function(target) {
				var $tr = $(target).closest('tr');
				var id = $tr.attr('id').replace(/marker_/, '');
				map.openPopup(id);
			},
			cancelSubscribe : function(target) {
				var $tr = $(target).closest('tr'), $tbody = $tr.parent();
				var id = $tr.attr('id').replace(/marker_/, '');
				$tr.remove();
				if (!$tbody.children().length) {
					$tbody.closest('table').hide();
				}
				var marker = map.getLayerById(id);
				if (marker) {
					if (marker.isFromWFS()) {
						marker.setStatus('origin');
					} else {
						map.removeLayerById(id);
					}
				}
				map.closePopup(id);
				this.adjustMapHeight();
			},
			doSubscribe : function(target) {
				var $tr = $(target).closest('tr');
				var id = $tr.attr('id').replace(/marker_/, '');
				var marker = map.getLayerById(id);
				marker.subscribe(function(markers) {
					if (markers.length) {
						var bounds = new L.LatLngBounds();
						for (var i = 0, len = markers.length; i < len; i++) {
							markers[i].addTo(map);
							bounds.extend(markers[i].getLatLng());
						}
						map.fitBounds(bounds);
						$tr.find('.label').html('activated')//
						.removeClass('label-warning').addClass('label-success');
						$tr.find('.btn-success').closest('td').empty();
					} else {
						$tr.find('.label').html('invalid')//
						.removeClass('label-warning').addClass('label-important');
						$tr.find('.btn-success').closest('td').empty();
					}
				});
			},
			showMarkerInfoRow : function(marker) {
				var id = L.Util.stamp(marker);
				if ($('#marker_' + id).length) {
					return;
				}

				if ($('#list').find('thead tr').length == 0) {
					$('#list').css('font-size', '12px');
					$('#list').find('thead').append([//
					"<tr>", //
					"<th></th>", //
					"<th>#</th>", //
					"<th>gml:id</th>", //
					"<th>Location</th>", //
					"<th>Name</th>", //
					"<th>Organisation Name</th>", //
					"<th>Watershed</th>", //
					"<th>Description</th>", //
					"<th>Status</th>", //
					"<th>Actions</th>", //
					"</tr>"//
					].join(''));
				}

				var latlng = marker.getLatLng(), data = marker.data;
				$('#list').find('tbody').prepend([//
				'<tr id="marker_' + id + '" class="row">', //
				'<td>' + id + '</td>', //
				'<td>' + (data.id || "") + '</td>', //
				'<td>' + latlng.lng.toFixed(7) + ' / ' + latlng.lat.toFixed(7) + '</td>', //
				'<td>' + (data.name || '') + '</td>', //
				'<td>' + (data.organisationName || '') + '</td>', //
				'<td>' + (data.Watershed || '') + '</td>', //
				'<td>' + (data.type || '') + '</td>', //
				'<td><span class="label label-warning">pending</span></td>', //
				'<td>', //
				' <button class="btn btn-mini btn-danger">Cancel</button>', //
				' <button class="btn btn-mini btn-success">Subscribe</button>', //
				'</td>', //
				'</tr>'].join(''));
				$('#list').slideDown("fast", function() {
					app.adjustMapHeight();
				});
			},
			adjustMapHeight : function() {
				if ($('#list').find('tbody tr').length == 5) {
					$('#list-container').css('height', $('#list-container').height() + 'px');
					$('#list-container').css('overflow', 'auto');
				} else {
					$('#list-container').css('height', 'auto');
					$('#list-container').css('overflow', 'none');
				}
				var h = $('#list').is(':visible') ? $('#list-container').height() : 0;
				$('#map').css('height', $(window).height() - $('#map').position().top - 4 - h + 'px');
			}
		});

		var app = new appView;
		app.adjustMapHeight();

		// Main map and layers control
		var map = new Map('map').setView([53, -100], 5);
		var layersControl = new LayersControl({}, {}, {
			collapsed : false
		}).addTo(map);

		// Click to add marker and table row
		var t0, t1, timer;
		map.on('click', function(e) {
			t0 = t1 || new Date;
			t1 = new Date;

			// This timeout value should not be quicker than system double click speed
			// Or both Zoom in and Add marker function will be activated
			var timeout = 500, interval = t1.getTime() - t0.getTime();
			if (50 < interval && interval < timeout) {
				// a double click, cancel the previous click
				if (timer) {
					clearTimeout(timer);
					timer = null;
				}
			} else {
				timer = setTimeout(function() {
					timer = null;
					app.showMarkerInfoRow(new CircleMarker(e.latlng, {
						type : 'Point of Interest',
					}).addTo(map));
				}, timeout);
			}
		});
		map.on('clickMarker', function(obj) {
			app.showMarkerInfoRow(obj.marker);
		});

		// Use MapBox as base layer
		new TileLayer(//
		'http://{s}.tiles.mapbox.com/v2/tesera.map-lmy2wpqu/{z}/{x}/{y}.png'//
		).addTo(map);

		// layer nhn:hydrography:hydro(1|2|10|20)m_l only display at zoom 5-9
		layersControl.addOverlay(new WMS("http://ows.geobase.ca/wms/geobase_en", {
			layers : 'nhn:hydrography:hydro20m_l,nhn:hydrography:hydro10m_l,nhn:hydrography:hydro2m_l,nhn:hydrography:hydro1m_l',
			format : 'image/png',
			transparent : true,
			maxZoom : 9,
			minZoom : 5,
		}).addTo(map), "Stream Segments");

		// layer USGS Surface Water Stations
		layersControl.addOverlay(new MarkerClusterGroup({
			style : {
				color : '#6600ff', // for svg marker and cluster marker
			},
			url : 'http://nwisvaws02.er.usgs.gov/ogc-swie/wfs?request=GetFeature',
			xml : ['<?xml version="1.0" ?>', //
			'<wfs:GetFeature version="1.1.0" service="WFS" maxFeatures="3"', //
			'    xmlns:wfs="http://www.opengis.net/wfs"', //
			'    xmlns:ogc="http://www.opengis.net/ogc"', //
			'    xmlns:gml="http://www.opengis.net/gml"', //
			'    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">', //
			'  <wfs:Query>', //
			'    <ogc:Filter>', //
			'      <ogc:BBOX>', //
			'        <gml:Envelope>', //
			'          <gml:lowerCorner>-101.904947 48.01835</gml:lowerCorner>', //
			'          <gml:upperCorner>-89.069706 60.008292</gml:upperCorner>', //
			'        </gml:Envelope>', //
			'      </ogc:BBOX>', //
			'    </ogc:Filter>', //
			'  </wfs:Query>', //
			'</wfs:GetFeature>' //
			].join(''),
			elementTag : 'member',
			positionTag : 'pos',
			data : function(element) {
				var data = {
					id : $(element).find('featureOfInterest').attr('gml:id'),
					name : $(element).find('name').text(),
					organisationName : $(element).find('CharacterString').text(),
					type : 'USGS Surface Water',
				};
				$(element).find('NamedValue').each(function(index, element) {
					name = $(element).find('name').attr('xlink:title');
					value = $(element).find('value').text();
					data[name] = value;
				});

				return data;
			}
		}).addTo(map), "USGS Surface Water");

		// layer EC Surface Water Stations
		layersControl.addOverlay(new MarkerClusterGroup({
			style : {
				color : '#ff6600', // for svg marker and cluster marker
			},
			url : ['http://198.103.103.7/GinService/sos?', //
			'REQUEST=GetFeatureOfInterest', //
			'&VERSION=2.0.0', //
			'&SERVICE=SOS', //
			'&spatialFilter=om:featureOfInterest/*/sams:shape,-101.904947,48.01835,-89.069706,60.008292', //
			'&namespaces=xmlns(sams,http://www.opengis.net/samplingSpatial/2.0),xmlns(om,http://www.opengis.net/om/2.0)']//
			.join(''),
			type : 'EC Surface Water',
			elementTag : 'featureMember',
			positionTag : 'pos',
			data : function(element) {
				return {
					id : $(element).find('identifier').text(),
					name : $(element).find('description').text(),
					type : 'EC Surface Water',
				};
			},
		}).addTo(map), "EC Surface Water");
	}); 
</script>
