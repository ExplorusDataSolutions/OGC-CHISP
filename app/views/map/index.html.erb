<div id="map" style="margin-top:2px"></div>
<div id="list-container">
	<table id="list-point" class="table table-striped table-bordered table-hover table-condensed">
		<thead></thead>
		<tbody></tbody>
	</table>
	<table id="list-station" class="table table-striped table-bordered table-hover table-condensed">
		<thead></thead>
		<tbody></tbody>
	</table>
</div>
<div class="modal hide fade">
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal" aria-hidden="true">
			&times;
		</button>
		<h3></h3>
	</div>
	<div class="modal-body">
		<form class="form-horizontal">
			<div class="control-group">
				<label class="control-label" for="inputEmail">Email</label>
				<div class="controls">
					<input type="email" id="inputEmail" placeholder="your@email.com">
				</div>
			</div>
			<div class="control-group">
				<label class="control-label" for="sw_level_threshold">Surface Water Level Threshold</label>
				<div class="controls">
					<input type="text" id="sw_level_threshold" placeholder="">
				</div>
			</div>
			<div class="control-group">
				<label class="control-label" for="sw_flow_threshold">Surface Flow Level Threshold</label>
				<div class="controls">
					<input type="text" id="sw_flow_threshold" placeholder="">
				</div>
			</div>
			<div class="control-group">
				<label class="control-label" for="frequency">Frequency</label>
				<div class="controls">
					<input type="text" id="frequency" placeholder="">
				</div>
			</div>
		</form>
	</div>
	<div class="modal-footer">
		<a href="javascript:void(0)" class="btn btn-close" data-dismiss="modal" aria-hidden="true">Close</a>
		<a href="javascript:void(0)" class="btn btn-primary">Subscribe</a>
	</div>
</div>
<script>
	jQuery('#map').parent().css('padding', '0px');

	jQuery(function($) {
		var appView = Backbone.View.extend({
			el : $("body"),
			events : {
				"click #list-container" : "tableClickDelegate",
				"click .btn-primary" : "doSubscribe",
			},
			loginedEmail : function() {
				var input = $('.navbar input[name=email]');
				return input.is(':hidden') && input.val();
			},
			recognizeMapClickAndDblclick : function(latlng, interval, staticObj) {
				// This timeout value should not be quicker than system double click speed
				// Or both Zoom in and Add marker function will be activated
				var app = this, timeout = 500;
				if (50 < interval && interval < timeout) {
					// a double click, cancel the previous click
					if (staticObj.timer) {
						clearTimeout(staticObj.timer);
						staticObj.timer = null;
					}
				} else {
					staticObj.timer = setTimeout(function() {
						staticObj.timer = null;
						app.showMarkerInfoRow(new CircleMarker(latlng, {
							type : 'Point of Interest',
							status : 'Selected',
						}, staticObj.layer.options.style).addTo(staticObj.layer));
					}, timeout);
				}
			},
			tableClickDelegate : function(e) {
				var el = e.target;
				if (el.tagName == 'TD' && el.className != 'f-action') {
					this.showMarkerPopup(el);
				} else if ($(el).hasClass('btn-danger')) {
					this.cancelSubscribe(el);
				} else if ($(el).hasClass('btn-success')) {
					if ($('input.row:checked').length == 0) {
						return this.alert("No POI selected", "error");
					}

					if (!this.loginedEmail()) {
						$('#inputEmail').closest('.control-group').show();
					} else {
						$('#inputEmail').closest('.control-group').hide();
					}
					var $tr = $(el).closest('tr');
					var $tb = $tr.closest('table');
					var id = this.getMarkerIdByRow($tr);
					$('#sw_level_threshold').val($tr.find('.f-level').html());
					$('#sw_flow_threshold').val($tr.find('.f-flow').html());
					$('#frequency').val($tr.find('.f-frequency').html());
					$('.modal h3').html($tb.attr('id') == 'list-point' ? 'Point Of Interest' : 'Station Of Interest');
					$('.modal').modal('show');
				} else if (el.tagName == 'INPUT') {
					if (el.name == 'all') {
						$('input[name=row]').attr('checked', el.checked);
					}
				}
			},
			showMarkerPopup : function(target) {
				var $tr = $(target).closest('tr');
				var id = this.getMarkerIdByRow($tr);
				map.openPopup(id);
			},
			cancelSubscribe : function(target) {
				var $tb = $(target).closest('table');
				var app = this;

				//var url = location.origin + "/GIS-SFU-cancel-subscribe"
				var url = "http://140.134.48.13/WNS/Broker/RegisterInfo.ashx?op=Unsubscribe"//
				+ "&email=" + this.loginedEmail();
				var url = location.origin;

				$.ajax({
					url : '/proxy',
					data : {
						url : url,
					},
					//dataType : 'json',
					success : function(json) {
						$tb.find('tbody tr').each(function(index, tr) {
							var id = app.getMarkerIdByRow(tr);
							var marker = map.getLayerById(id);
							if (marker) {
								marker.groupLayer.removeLayer(marker);
								$(tr).remove();
								map.closePopup(id);
							}
						});
						$tb.hide();
						app.adjustMapHeight();
					},
					error : function(xhr, textStatus, e) {
						typeof callback == 'function' && callback({
							error : textStatus || e
						});
					},
				});
			},
			doSubscribe : function() {
				var email = this.loginedEmail();
				if (email == '') {
					email = $('#inputEmail').val();
					if (email) {
						$.app.loginEmail(email);
						// login the email in the meantime
						$.get('/login.json', {
							email : email,
						});
					} else {
						return $.app.alert('Please leave your email', 'warning');
					}
				}
				var data = [], marker_ids = [];
				$('input.row:checked').each(function(index, input) {
					var marker_id = input.value;
					var marker = map.getLayerById(marker_id);
					var latlng = marker.getLatLng();
					data.push({
						email : email,
						sw_level_threshold : $('#sw_level_threshold').val(),
						sw_flow_threshold : $('#sw_flow_threshold').val(),
						frequency : $('#frequency').val(),
						poi_type : $('.modal h3').html() == 'Point Of Interest' ? 'P' : 'S',
						lat : latlng.lat.toFixed(8),
						lng : latlng.lng.toFixed(8),
					});
					marker_ids.push(marker_id);
				});
				var app = this;

				/**
				 * @see https://github.com/tesera/OGC-CHISP/wiki/GIS-FCU-Subscription-Broker-API
				 */
				var url = "http://140.134.48.13/WNS/Broker/RegisterInfo.ashx?op=subscribe"
				// A temporary substitution
				//var url = location.origin + "/GIS-SFU-subscribe"
				$.ajax({
					url : '/proxy',
					type : 'post',
					data : {
						url : url,
						json : JSON.stringify(data),
					},
					dataType : 'json',
					success : function(json) {
						if (json.code == 'Success') {
							for (var i = 0, poiID; poiID = json.poiIDs[i]; i++) {
								var marker_id = marker_ids[i];
								var marker = map.getLayerById(marker_id);
								marker.setStatus('Pending');
								marker.data.type = 'P';
								app.showMarkerInfoRow(marker);
							}
							$('.modal').modal('hide');
							app.alert('Subscribe ' + json.poiIDs.join(',') + ' success', 'success');
						} else {
							$('.modal').modal('hide');
							app.alert('Subscribe error', json.message, 'error');
						}
					},
					error : function(xhr, status, e) {
						$('.modal').modal('hide');
						app.alert('Subscribe error', status + ' : ' + e, 'error');
					},
				});
			},
			showMarkerInfoRow : function(marker) {
				var id = L.Util.stamp(marker);
				var latlng = marker.getLatLng(), data = marker.data;

				if (data.id) {
					if ($('#list-station').find('thead tr').length == 0) {
						$('#list-station').find('thead').append(["<tr>", //
						"<th></th><th>#</th><th>gml:id</th><th>Location</th>", //
						"<th>Name</th><th>Organisation Name</th><th>Watershed</th>", //
						"<th>Description</th><th>Status</th><th>Actions</th>", //
						"</tr>"].join(''));
					}
					$('#list-station').show().find('tbody').prepend([//
					'<tr id="marker_' + id + '" class="row">', //
					'<td class="f-id"></td>', //
					'<td>' + (data.id || "") + '</td>', //
					'<td>' + latlng.lng.toFixed(8) + ' / ' + latlng.lat.toFixed(8) + '</td>', //
					'<td>' + (data.name || '') + '</td>', //
					'<td>' + (data.organisationName || '') + '</td>', //
					'<td>' + (data.Watershed || '') + '</td>', //
					'<td>' + (data.type || '') + '</td>', //
					'<td>Point of station</td><td class="f-status"><span class="label"></span></td>', //
					'<td class="f-action">', //
					' <button class="btn btn-mini btn-danger">Cancel</button>', //
					' <button class="btn btn-mini btn-success">Subscribe</button>', //
					'</td>', //
					'</tr>'].join(''));
				} else {
					var $tb = $('#list-point');
					if ($tb.find('thead tr').length == 0) {
						$tb.find('thead').append(["<tr>", //
						"<th></th><th>#</th><th>Location</th>", //
						"<th>sw_level_threshold</th><th>sw_flow_threshold</th><th>freqency</th>", //
						'<th>Description</th><th>Status</th>', //
						'<th class="f-chb hide"><input type="checkbox" class="all" checked="checked" /></th>', //
						'<th class="f-action"></th></tr>'].join(''));
					}
					if (this.getRowByMarkerId(id).length == 0) {
						rows = $tb.find('tbody tr').length;
						rows >= 1 && $tb.find('tbody tr:first .f-action').remove();
						$tb.show().find('tbody').prepend([//
						'<tr id="marker_' + id + '" class="row">', //
						'<td class="f-id"></td><td class="f-latlng"></td>', //
						'<td class="f-level"></td><td class="f-flow"></td><td class="f-frequency"></td>', //
						'<td>Point of interest</td><td class="f-status"><span class="label"></span></td>', //
						'<td class="f-chb hide">', //
						data.poi_id ? '' : '<input type="checkbox" class="row" checked="checked" value="' + id + '" />', //
						'</td>', //
						'<td class="f-action" rowspan="' + (rows + 1) + '">', //
						' <button class="btn btn-mini btn-danger">Cancel</button>', //
						' <button class="btn btn-mini btn-success hide">Subscribe</button>', //
						'</td>', //
						'</tr>'].join(''));
						data.status == 'Selected' && rows >= 1 && $('.f-chb').show();
					}
				}

				$tr = this.getRowByMarkerId(id), $tb = $tr.closest('table');
				$tr.find('.f-id').html(id);
				$tr.find('.f-latlng').html(latlng.lng.toFixed(8) + ' / ' + latlng.lat.toFixed(8));
				$tr.find('.f-level').html(data.sw_level_threshold || '');
				$tr.find('.f-flow').html(data.sw_flow_threshold || '');
				$tr.find('.f-frequency').html(data.frequency || '');
				$tr.find('.f-status .label').html(data.status)//
				.removeClass().addClass(this.statusClass[data.status] || '');
				data.status == 'Selected' && $tr.find('.f-action .btn-success').show();
				data.status == 'Pending' && $tr.find('.f-chb').html('');
				$tb.find('input.row').length == 0 && $('.f-chb').hide();
				$tb.find('.label-selected').length == 0 && $tr.find('.f-action .btn-success').hide();

				$('#list-container').slideDown("fast", function() {
					app.adjustMapHeight();
				});
			},
			statusClass : {
				Selected : "label label-selected",
				Pending : "label label-warning",
				Active : "label label-success",
				Invalid : "label label-important",
			},
			adjustMapHeight : function() {
				if ($('#list-station, #list-point').find('tbody tr').length >= 5) {
					$('#list-container').css('height', $('#list-container').height() + 'px');
					$('#list-container').css('overflow', 'auto');
				} else {
					$('#list-container').css('height', 'auto');
					$('#list-container').css('overflow', 'none');
				}
				var h = $('#list-container').is(':visible') ? $('#list-container').height() : 0;
				$('#map').css('height', $(window).height() - $('#map').position().top - 4 - h + 'px');
			},
			getMarkerIdByRow : function(tr) {
				return $(tr).attr('id').replace(/marker_/, '');
			},
			getRowByMarkerId : function(marker_id) {
				return $('#marker_' + marker_id);
			},
			alert : function() {
				$.app && $.app.alert.apply(this, arguments);
			},
		});

		var app = new appView;
		app.adjustMapHeight();

		/**
		 * Map and controls
		 */
		var map = new Map('map').setView([53, -100], 5);
		var bounds = new L.LatLngBounds([48.01835, -101.904947], [60.008292, -89.069706]);
		var layersControl = new LayersControl({}, {}, {
			collapsed : false
		}).addTo(map);
		var drawControl = new Draw().addTo(map);

		/**
		 * Map evnets
		 */
		map.on('clickMarker', function(obj) {
			app.showMarkerInfoRow(obj.marker);
		});

		/**
		 * Map layers
		 */
		// Use MapBox as base layer
		new TileLayer(//
		'http://{s}.tiles.mapbox.com/v3/tesera.map-1y5jmthi/{z}/{x}/{y}.png'//
		).addTo(map);

		// layer nhn:hydrography:hydro(1|2|10|20)m_l only display at zoom 5-9
		layersControl.addOverlay(new WMS("http://ows.geobase.ca/wms/geobase_en", {
			layers : 'nhn:hydrography:hydro20m_l,nhn:hydrography:hydro10m_l,nhn:hydrography:hydro2m_l,nhn:hydrography:hydro1m_l',
			format : 'image/png',
			transparent : true,
			maxZoom : 9,
			minZoom : 5,
		}).addTo(map), "Stream Segments");

		// layer Point Of Interest
		layersControl.addOverlay(new MarkerGroup({
			style : {
				color : '#0266C8', // for svg marker and cluster marker
			},
			//url : location.origin + '/GIS-SFU-subscription.json',
			url : "http://140.134.48.13/WNS/Broker/RegisterInfo.ashx?op=GetUserSubscription",
			email : app.loginedEmail(),
			click : function() {
				var t0, t1, staticObj = {};
				return function(e) {
					staticObj.layer = this;
					t0 = t1 || new Date, t1 = new Date, interval = t1.getTime() - t0.getTime();
					app.recognizeMapClickAndDblclick(e.latlng, interval, staticObj);
				}
			}(),
			onEmailLogin : function() {
				$.app.on("login", function(email) {
					this.options.email = email;
					this.load();
				}, this);
			},
			onMarkerAdded : function(marker) {
				app.showMarkerInfoRow(marker);
			},
			showMessage : function(msg, status) {
				$.app.alert('Point Of Interest :<br />' + msg, status);
			},
		}).addTo(map), "Point Of Interest");

		// layer USGS Surface Water Stations
		layersControl.addOverlay(new MarkerClusterGroup({
			style : {
				color : '#00933B', // for svg marker and cluster marker
			},
			url : 'http://nwisvaws02.er.usgs.gov/ogc-swie/wfs?request=GetFeature&featureId=05113600,05114000,05116000,05116500,05117500,05120000,05120500,05121000,05121001,05122000,05123400,05123510,05124000,06133500,06135000,06139500,06140500,06142400,06151500,06154100,06154400,06155030,06155500,06164510,06166000,06167500,06169500,06172310,06174500',
			bounds : bounds,
			elementTag : 'member',
			positionTag : 'pos',
			data : function(element) {
				var data = {
					id : $(element).find('featureOfInterest').attr('gml:id'),
					name : $(element).find('name').text(),
					organisationName : $(element).find('CharacterString').text(),
					type : 'USGS Surface Water',
				};
				$(element).find('NamedValue').each(function(index, element) {
					name = $(element).find('name').attr('xlink:title');
					value = $(element).find('value').text();
					data[name] = value;
				});

				return data;
			}
		}).addTo(map), "USGS Surface Water");

		// layer EC Surface Water Stations
		layersControl.addOverlay(new MarkerClusterGroup({
			style : {
				color : '#F2B50F', // for svg marker and cluster marker
			},
			url : ['http://198.103.103.7/GinService/sos?', //
			'REQUEST=GetFeatureOfInterest', //
			'&VERSION=2.0.0', //
			'&SERVICE=SOS', //
			'&spatialFilter=om:featureOfInterest/*/sams:shape,{bBoxString}', //
			'&namespaces=xmlns(sams,http://www.opengis.net/samplingSpatial/2.0),xmlns(om,http://www.opengis.net/om/2.0)']//
			.join(''),
			bounds : bounds,
			type : 'EC Surface Water',
			elementTag : 'featureMember',
			positionTag : 'pos',
			data : function(element) {
				return {
					id : $(element).find('identifier').text(),
					name : $(element).find('description').text(),
					type : 'EC Surface Water',
				};
			},
		}).addTo(map), "EC Surface Water");
	}); 
</script>
